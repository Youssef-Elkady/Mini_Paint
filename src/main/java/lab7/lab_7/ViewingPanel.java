/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lab7.lab_7;

import java.awt.Graphics;
import java.util.ArrayList;

/**
 *
 * @author taver
 */
public class ViewingPanel extends javax.swing.JPanel {
 ArrayList<Shape> shapes =  new ArrayList<>();
    
    public ViewingPanel(){
        
    } 
    public void addShape(Shape shape){
       shapes.add(shape);
     }
    public void removeShape (Shape shape){
         for(int i = 0 ; i<shapes.size();i++)
       {
           if(shapes.get(i).equals(shape))
               shapes.remove(shapes.get(i));
       }
    }
     // return all shapes drawn on canvas
     public Shape[] getShapes(){
     return shapes.toArray(new Shape[0]);
    }
    // redraws all shapes on canvas
    public void refresh(java.awt.Graphics canvas){
        repaint();
    }
//       public void drawLine(LineSegment r) {
//           
//        r = new LineSegment(r.getPosition(),r.getLength(), r.getColor());
//        r.setPosition(r.getPosition());
//        r.setLength(r.getLength());
//        JPanel panel = new JPanel();
       @Override
        protected void paintComponent(Graphics g){
        super.paintComponent(g);
        for (int i =0;i<shapes.size();i++){
            if(shapes.get(i) instanceof LineSegment){
                LineSegment line = (LineSegment)shapes.get(i);                
                line.draw(g);
                
            }else if (shapes.get(i) instanceof Rectangle){
                Rectangle rect = (Rectangle)shapes.get(i);
                rect.draw(g);
            } else if (shapes.get(i) instanceof Square){
                Square square = (Square)shapes.get(i);
                square.draw(g);
            } else {
                Circle circle = (Circle)shapes.get(i);
                circle.draw(g);
            }
        }

      // }
       }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
